#%RAML 1.0
title: "Tasks API"
description: "An API for managing a list of tasks that need to be done. \n\nDon't\
  \ forget to take it for a spin by clicking on the **Try in Client** button next\
  \ to each operation! All read operations are public and don't require authentication.\n"
version: "1.1.0"
protocols:
- "HTTPS"
baseUri: "https://tasksapi.restlet.net/v1"
mediaType:
- "application/json"
types:
  Task:
    type: "object"
    description: "An object that represents a Task."
    properties:
      id:
        type: "string"
        description: "Auto-generated primary key field"
        example: "3fa2eb40-b61c-11e6-9de0-fdbe71bceebb"
      name:
        type: "string"
        example: "Figure out how to colonize Mars"
      completed:
        type: "boolean"
      createdAt:
        type: "string"
        required: false
        example: "2016.10.06"
    example:
      value: "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\":\
        \ \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\
        \n}"
      strict: false
  Error:
    type: "object"
    description: "This general error structure is used throughout this API."
    properties:
      code:
        type: "integer"
        minimum: 400
        maximum: 599
      description:
        type: "string"
        required: false
        examples:
          example: "Bad query parameter [$size]: Invalid integer value [abc]"
          example1: "The server understood the request, but is refusing to fulfill\
            \ it"
      reasonPhrase:
        type: "string"
        required: false
        examples:
          example: "Bad Request"
          example1: "Forbidden"
    example:
      value: "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]:\
        \ Invalid integer value [abc]\",\n  \"reasonPhrase\": \"Bad Request\"\n}"
      strict: false
securitySchemes:
  HTTP_BASIC:
    type: "Basic Authentication"
    description: "All GET methods are public, meaning that *you can read all the data*.\
      \ Write operations require authentication and therefore are forbidden to the\
      \ general public."
/tasks/:
  get:
    displayName: "Load the list of Tasks"
    queryParameters:
      id:
        type: "string"
        description: "Allows to filter the collection of results by the value of field\
          \ `id`"
        required: false
        example: "47ee3550-b619-11e6-8408-0bdb025a7cfa"
      name:
        type: "string"
        description: "Allows to filter the collection of results by the value of field\
          \ `name`"
        required: false
        example: "Learn about hypermedia APIs"
      $page:
        type: "integer"
        description: "Number of the page to retrieve."
        required: false
        example: 1
      $size:
        type: "integer"
        description: "Size of the page to retrieve."
        required: false
        example: 10
      $sort:
        type: "string"
        description: "Order in which to retrieve the results. Multiple sort criteria\
          \ can be passed. Example: sort=age ASC,height DESC"
        required: false
        examples:
          example: "createdAt DESC"
          example1: "name ASC"
      completed:
        type: "boolean"
        description: "Allows to filter the collection of results by the value of field\
          \ `completed`"
        required: false
        examples:
          example: true
          example1: false
      createdAt:
        type: "string"
        description: "Allows to filter the collection of results by the value of field\
          \ `createdAt`"
        required: false
        example: "2016.07.03"
    responses:
      200:
        description: "Status 200"
        headers:
          X-Page-Size:
            type: "integer"
            required: false
            example: 25
          X-Page-Count:
            type: "integer"
            required: false
            example: 1
          X-Page-Number:
            type: "integer"
            required: false
            example: 1
          X-Total-Count:
            type: "integer"
            required: false
            example: 2
        body:
          type: "array"
          items:
            type: "Task"
          example:
            value: "[{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"\
              name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\"\
              : \"2016.07.03\"\n}]"
            strict: false
      400:
        description: "Status 400"
        body:
          type: "Error"
  post:
    displayName: "Create a new Task"
    body:
      type: "Task"
      example:
        value: "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\"\
          : \"2016.07.03\"\n}"
        strict: false
    responses:
      200:
        description: "Status 200"
        body:
          type: "Task"
          example:
            value: "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\"\
              : \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\
              \n}"
            strict: false
    securedBy:
    - "HTTP_BASIC"
/tasks/{taskid}:
  uriParameters:
    taskid:
      type: "string"
      description: "Identifier of the Task"
      example: "47ee3550-b619-11e6-8408-0bdb025a7cfa"
  get:
    displayName: "Load a specific Task"
    queryParameters:
      taskid:
        type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          type: "Task"
          example:
            value: "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\"\
              : \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\
              \n}"
            strict: false
      400:
        description: "Status 400"
        body:
          type: "Error"
  put:
    displayName: "Update a Task"
    body:
      type: "Task"
      example:
        value: "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\"\
          : \"2016.07.03\"\n}"
        strict: false
    responses:
      200:
        description: "Status 200"
        body:
          type: "Task"
          example:
            value: "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\"\
              : \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\
              \n}"
            strict: false
    securedBy:
    - "HTTP_BASIC"
  delete:
    displayName: "Delete a Task"
    responses:
      200:
        description: "Status 200"
    securedBy:
    - "HTTP_BASIC"
